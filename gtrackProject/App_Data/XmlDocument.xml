<?xml version="1.0"?>
<doc>
    <assembly>
        <name>gtrackProject</name>
    </assembly>
    <members>
        <member name="M:gtrackProject.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,gtrackProject.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,gtrackProject.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,gtrackProject.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:gtrackProject.Areas.HelpPage.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},gtrackProject.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:gtrackProject.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleKey.#ctor(gtrackProject.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:gtrackProject.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,gtrackProject.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:gtrackProject.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:gtrackProject.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:gtrackProject.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:gtrackProject.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:gtrackProject.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:gtrackProject.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:gtrackProject.Controllers.account.AccountController">
            <summary>
            Default AccountController to manage all account with OWIN Security and OAuth
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:gtrackProject.Controllers.account.AccountController.#ctor" -->
        <!-- Badly formed XML comment ignored for member "M:gtrackProject.Controllers.account.AccountController.#ctor(Microsoft.AspNet.Identity.UserManager{Microsoft.AspNet.Identity.EntityFramework.IdentityUser},Microsoft.Owin.Security.ISecureDataFormat{Microsoft.Owin.Security.AuthenticationTicket})" -->
        <member name="M:gtrackProject.Controllers.account.AccountController.GetUserInfo">
            <summary>
            Get UserInfo.
            </summary>
            <returns>UserInfoViewModel.</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.Logout">
            <summary>
            Logout!!!
            </summary>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.GetManageInfo(System.String,System.Boolean)">
            <summary>
            Get ManageInfo.
            </summary>
            <param name="returnUrl">return Url.</param>
            <param name="generateState">generateState (true,false)</param>
            <returns>ManageInfoViewModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.ChangePassword(gtrackProject.Models.account.ChangePasswordBindingModel)">
            <summary>
            ChangePassword!!!
            </summary>
            <param name="model">The <see cref="T:gtrackProject.Models.account.ChangePasswordBindingModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.SetPassword(gtrackProject.Models.account.SetPasswordBindingModel)">
            <summary>
            SetPassword!!!
            </summary>
            <param name="model">The <see cref="T:gtrackProject.Models.account.SetPasswordBindingModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.AddExternalLogin(gtrackProject.Models.account.AddExternalLoginBindingModel)">
            <summary>
            Add ExternalLogin
            </summary>
            <param name="model">The <see cref="T:gtrackProject.Models.account.AddExternalLoginBindingModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.RemoveLogin(gtrackProject.Models.account.RemoveLoginBindingModel)">
            <summary>
            RemoveLogin!!!
            </summary>
            <param name="model">The <see cref="T:gtrackProject.Models.account.RemoveLoginBindingModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.GetExternalLogin(System.String,System.String)">
            <summary>
            Get ExternalLogin
            </summary>
            <param name="provider">provider</param>
            <param name="error">error msg</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.GetExternalLogins(System.String,System.Boolean)">
            <summary>
            Get ExternalLogins
            </summary>
            <param name="returnUrl">return Url</param>
            <param name="generateState">generateState (true,false)</param>
            <returns>List ExternalLoginViewModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.Register(gtrackProject.Models.account.RegisterBindingModel)">
            <summary>
            Register User *by "customer service","admin"* Not AllowAnonymous
            </summary>
            <param name="model">The <see cref="T:gtrackProject.Models.account.RegisterBindingModel"/>.</param>
            <returns>IdentityUser</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.AccountController.RegisterExternal(gtrackProject.Models.account.RegisterExternalBindingModel)">
            <summary>
            RegisterExternal
            </summary>
            <param name="model">The <see cref="T:gtrackProject.Models.account.RegisterExternalBindingModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="T:gtrackProject.Controllers.account.CustomerController">
            <summary>
            CustomerController - CRUD Customer User By cs,admin.
            </summary>
        </member>
        <member name="M:gtrackProject.Controllers.account.CustomerController.#ctor(gtrackProject.Repositories.account.IRepos.ICustomerRepository)">
            <summary>
            Call repository
            </summary>
            <param name="repository"><see cref="T:gtrackProject.Repositories.account.IRepos.ICustomerRepository"/></param>
            <exception cref="T:System.ArgumentNullException">repository isNull</exception>
        </member>
        <member name="M:gtrackProject.Controllers.account.CustomerController.GetByHd(System.Int32)">
            <summary>
            Gets All Customer by header
            </summary>
            <param name="hdId">header id *int*</param>
            <returns>CustomerModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.CustomerController.GetUser(System.Int32)">
            <summary>
            Get Customer
            </summary>
            <param name="id">id *int*</param>
            <returns>CustomerModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.CustomerController.PostUser(gtrackProject.Models.account.CustomerModel)">
            <summary>
            Post Customer
            </summary>
            <param name="postCust">The <see cref="T:gtrackProject.Models.account.CustomerModel"/>.</param>
            <returns>CustomerModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.CustomerController.PutUser(System.Int32,gtrackProject.Models.account.CustomerModel)">
            <summary>
            Put Customer
            </summary>
            <param name="id">id *int*</param>
            <param name="putCust">The <see cref="T:gtrackProject.Models.account.CustomerModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.CustomerController.DeleteRole(System.Int32)">
            <summary>
            Delete Customer
            </summary>
            <param name="id">id *int*</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="T:gtrackProject.Controllers.account.RoleAdminController">
            <summary>
            RoleAdminController - CRUD User's role By Admin Only.
            </summary>
        </member>
        <member name="M:gtrackProject.Controllers.account.RoleAdminController.#ctor(gtrackProject.Repositories.account.IRepos.IRoleAdminRepository)">
            <summary>
            Call repository
            </summary>
            <param name="repository"> The <see cref="T:gtrackProject.Repositories.account.IRepos.IRoleAdminRepository"/>.</param>
            <exception cref="T:System.ArgumentNullException">repository isNull</exception>
        </member>
        <member name="M:gtrackProject.Controllers.account.RoleAdminController.GetRoles">
            <summary>
            Gets All roles. *Queryable*
            </summary>
            <returns>IdentityRole</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.RoleAdminController.GetRole(System.String)">
            <summary>
            Gets a role.
            </summary>
            <param name="id">id by AspIdentity *nvarchar 128*</param>
            <returns>IdentityRole</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.RoleAdminController.PostRole(Microsoft.AspNet.Identity.EntityFramework.IdentityRole)">
            <summary>
            Post a role.
            </summary>
            <param name="rolePost">The <see cref="T:Microsoft.AspNet.Identity.EntityFramework.IdentityRole"/>.</param>
            <returns>IdentityRole</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.RoleAdminController.PutRole(System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityRole)">
            <summary>
            Put a role.
            </summary>
            <param name="id">id by AspIdentity. *nvarchar 128*</param>
            <param name="rolePut">The <see cref="T:Microsoft.AspNet.Identity.EntityFramework.IdentityRole"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.RoleAdminController.DeleteRole(System.String)">
            <summary>
            DELETE a role.
            </summary>
            <param name="id">id by AspIdentity. *nvarchar 128*</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="T:gtrackProject.Controllers.account.HdController">
            <summary>
            HdController - CRUD Header By cs,admin.
            </summary>
        </member>
        <member name="M:gtrackProject.Controllers.account.HdController.#ctor(gtrackProject.Repositories.account.IRepos.IHdRepository)">
            <summary>
            Call repository
            </summary>
            <param name="repository"> The <see cref="T:gtrackProject.Repositories.account.IRepos.IHdRepository"/>.</param>
            <exception cref="T:System.ArgumentNullException">repository isNull</exception>
        </member>
        <member name="M:gtrackProject.Controllers.account.HdController.Gethds">
            <summary>
            Gets All headers. *Queryable*
            </summary>
            <returns>Hd</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.HdController.Gethd(System.Int16)">
            <summary>
            Gets a header.
            </summary>
            <param name="id">id *short*</param>
            <returns>Hd</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.HdController.Puthd(System.Int16,gtrackProject.Models.account.Hd)">
            <summary>
            Put a header
            </summary>
            <param name="id">id *short*</param>
            <param name="hd">The <see cref="T:gtrackProject.Models.account.Hd"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.HdController.Posthd(gtrackProject.Models.account.Hd)">
            <summary>
            Post a header
            </summary>
            <param name="hd">The <see cref="T:gtrackProject.Models.account.Hd"/>.</param>
            <returns>Hd</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.HdController.Deletehd(System.Int16)">
            <summary>
            Delete a header
            </summary>
            <param name="id">id *short*</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="T:gtrackProject.Controllers.driver.DriverCateController">
            <summary>
            DriverCateController - CRUD Driver's category By Admin Only.
            </summary>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverCateController.#ctor(gtrackProject.Repositories.driver.IRepos.IDriverCateRepository)">
            <summary>
            Call repository
            </summary>
            <param name="repository"> The <see cref="T:gtrackProject.Repositories.driver.IRepos.IDriverCateRepository"/>.</param>
            <exception cref="T:System.ArgumentNullException">repository isNull</exception>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverCateController.Get">
            <summary>
            Gets All categories. *Queryable*
            </summary>
            <returns>DriverCategory</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverCateController.Get(System.Byte)">
            <summary>
            Get a category.
            </summary>
            <param name="id">id *byte*</param>
            <returns>DriverCategory</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverCateController.Post(gtrackProject.Models.driver.DriverCategory)">
            <summary>
            Post a category.
            </summary>
            <param name="value">The <see cref="T:gtrackProject.Models.driver.DriverCategory"/>.</param>
            <returns>DriverCategory</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverCateController.Put(System.Byte,gtrackProject.Models.driver.DriverCategory)">
            <summary>
            Put a category.
            </summary>
            <param name="id">id *byte*</param>
            <param name="value">The <see cref="T:gtrackProject.Models.driver.DriverCategory"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverCateController.Delete(System.Byte)">
            <summary>
            Delete a category.
            </summary>
            <param name="id">id *byte*</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="T:gtrackProject.Controllers.driver.DriverController">
            <summary>
            RoleAdminController - CRUD Driver User.
            </summary>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverController.#ctor(gtrackProject.Repositories.driver.IRepos.IDriverRepository)">
            <summary>
            Call repository
            </summary>
            <param name="repository"> The <see cref="T:gtrackProject.Repositories.driver.IRepos.IDriverRepository"/>.</param>
            <exception cref="T:System.ArgumentNullException">repository isNull</exception>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverController.Get">
            <summary>
            Gets All Drivers. *Queryable*
            </summary>
            <returns>Driver</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverController.Get(System.Int32)">
            <summary>
            Gets a Driver.
            </summary>
            <param name="id">id *int*</param>
            <returns>Driver</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverController.Post(gtrackProject.Models.driver.Driver)">
            <summary>
            Post a Driver
            </summary>
            <param name="value">The <see cref="T:gtrackProject.Models.driver.Driver"/>.</param>
            <returns>Driver</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverController.Put(System.Int32,gtrackProject.Models.driver.Driver)">
            <summary>
            Put a Driver
            </summary>
            <param name="id">id *int*</param>
            <param name="value">The <see cref="T:gtrackProject.Models.driver.Driver"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.driver.DriverController.Delete(System.Int32)">
            <summary>
            Delete a Driver *by cs,admin and customer*
            </summary>
            <param name="id">id *int*</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="T:gtrackProject.Controllers.account.EmployeeAdminController">
            <summary>
            RoleAdminController - CRUD Employee User By Admin Only.
            </summary>
        </member>
        <member name="M:gtrackProject.Controllers.account.EmployeeAdminController.#ctor(gtrackProject.Repositories.account.IRepos.IEmployeeAdminRepository)">
            <summary>
            Call repository
            </summary>
            <param name="repository"> The <see cref="T:gtrackProject.Repositories.account.IRepos.IEmployeeAdminRepository"/>.</param>
            <exception cref="T:System.ArgumentNullException">repository isNull</exception>
        </member>
        <member name="M:gtrackProject.Controllers.account.EmployeeAdminController.GetUsers">
            <summary>
            Gets Employee
            </summary>
            <returns>EmployeeAdminModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.EmployeeAdminController.GetUser(System.Int32)">
            <summary>
            Get Employee
            </summary>
            <param name="id">id *int*</param>
            <returns>EmployeeAdminModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.EmployeeAdminController.PostUser(gtrackProject.Models.account.EmployeeAdminModel)">
            <summary>
            Post Employee
            </summary>
            <param name="postEmp">The <see cref="T:gtrackProject.Models.account.EmployeeAdminModel"/>.</param>
            <returns>EmployeeAdminModel</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.EmployeeAdminController.PutUser(System.Int32,gtrackProject.Models.account.EmployeeAdminModel)">
            <summary>
            Put Employee
            </summary>
            <param name="id">id *int*</param>
            <param name="putEmp">The <see cref="T:gtrackProject.Models.account.EmployeeAdminModel"/>.</param>
            <returns>HTTP Status</returns>
        </member>
        <member name="M:gtrackProject.Controllers.account.EmployeeAdminController.DeleteRole(System.Int32)">
            <summary>
            Delete Employee
            </summary>
            <param name="id">id *int*</param>
            <returns>HTTP Status</returns>
        </member>
    </members>
</doc>
